=head1 NAME

Text::PSTemplate::Manual - Text::PSTemplate マニュアル

=head1 DESCRIPTION

このドキュメントは、Text::PSTemplateディストリビューションをデザイナー視点から解説します。

HTMLでの使用例

    <% xml_declaration_if_not_ie6() %>
    <html>
    <title><% $title %></title>
    <body>
        <div>
            <% import('path/to/header.html', {title => $title}) %>
        </div>
        <div>
            <% if_equals($some_var, 'hoge')<<THEN,ELSE %>
                <% $some_var %> is hoge
            <%THEN%>
                <% $some_var %> is something else
            <%ELSE%>
        </div>
        <dl>
            <% &each($hash, 'key' => 'value')<<TPL %>
                <% if($value)<<THEN %>
                    <dt><% $key %></dt>
                    <dd><% $value %></dd>
                <% THEN %>
            <% TPL %>
        </dl>
        <p>
            <% your_func($any, $values, $as, $you, $like)<<EOF1,EOF2 %>
                ...
            <% EOF1 %>
                ...
            <% EOF2 %>
        </p>
    </body>
    </html>

=head1 使い方

=head2 変数と関数の使用

テンプレート内ではステートメントはデリミタで括る必要があります。デリミタ内はPerl言語によく似た
書式になります。

    <% $str %>
    <% some_func('str') %>
    <% some_func('str') %>
    <% some_func($str) %>

ステートメントでは改行することもできます。

    <%
        &str_envif(
            str => 'Internet Explorer is not recommended',
            key => 'USER-AGENT',
            value => 'MSIE',
        )
    %>

=head2 escape

テンプレートタグはバックスラッシュでエスケープできます。エスケープすると、タグデリミタと内部の
文字列はそのまま出力されます。バックスラッシュ自体にタグを後続させたい場合はバックスラッシュを
2つ記述することでバックスラッシュ自体をエスケープします。

    \<% this appears literally %>   ### タグ文字列
    \\<% $var %>                    ### バックスラッシュが一つとパース結果
    \\\<% this appears literally %> ### バックスラッシュ一つとタグ文字列
    \\\\<% $var %>                  ### バックスラッシュ2つとパース結果
    ....

$と&はタグ内では変数や関数として解釈されます。これはPerl言語の文法と異なり、シングルクォート内
でも同じです。タグ内でこれらの文字列自体を扱いたい場合はバックスラッシュでエスケープする必要が
あります。

    <% some_func(price => '\$10.25') %>

=head1 AUTHOR

Sugama Keita, E<lt>sugama@jamadam.comE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2011 by Sugama Keita.

This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=cut
